name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      
      # Setup Node.js 16
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      # Install syft
      - name: Install syft
        run: |
          curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin

      # Install Grype
      - name: Install Grype
        run: |
          curl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sh -s -- -b /usr/local/bin
      
      # Install jq
      - name: Install jq
        run: |
          sudo apt-get update && sudo apt-get install -y jq
    
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.21
        env:
          GO111MODULE: on

      # Install golangci-lint
      - name: Install golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: latest
          only-new-issues: false
          args: --timeout=10m

      # Install gopls
      - name: Install gopls
        run: |
          go install golang.org/x/tools/gopls@latest
          
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}


      - name: Scan go files in '.' directory with gopls and show diagnostic results
        run: |
          for gofile in $(find . -type f -name "*.go"); do
            echo "Scanning $gofile for errors..."
            gopls check $gofile
          done

      - name: Scan go files in '.' directory with gopls -rpc.trace and show full rpc trace in lsp inspector format
        run: |
          for gofile in $(find . -type f -name "*.go"); do
            echo "Scanning $gofile for errors..."
            gopls gopls -rpc.trace -v check $gofile
          done

      - name: Scan go files in '.' directory with vulncheck to find code vulnerabilities
        run: |
          echo "Scanning $gofile for errors..."
          gopls vulncheck ./... | jq .

      - name: Scan SBOM files in 'dist' directory with Grype
        run: |
          for file in $(find dist -type f -name "*.sbom"); do
            echo "Scanning $file for vulnerabilities..."
            grype sbom:$file --add-cpes-if-none --fail-on="high" --fail-on="critical" 
          done
